<div>
  <h1 class="video-h1"><%= t('videos.content_dedicace.preview_available') %></h1>
  <div class="flex flex-row justify-center w-full">
    <%= image_tag 'left-with-star.png', class: 'image-sides left-image' %>
    <div class="content w-full flex flex-col justify-center items-center">

      <div class="edit-video-frame">
        <% if @video.completed? %>
          <div>
            <div class="flex justify-start items-center mb-45">
              <div class="mr-2 p-text-16"><%= t('videos.content_dedicace.your_media') %></div>
              <div class="flex justify-start items-center p-text-16">
                <%= image_tag 'icons/mingcute_time-line.png', alt: 'Time Icon', class: 'inline-block ml-2 mr-2', style: 'height: 24px; width: 24px;' %>
                <%= format_time(@video.final_video_duration) %>
              </div>
              <div class="ml-50"><%= t('videos.content_dedicace.film_cost') %></div>
              <div class="flex justify-start items-center p-text-16">
                <%= image_tag 'icons/ant-design_euro-outlined', alt: 'Time Icon', class: 'inline-block ml-2 mr-2', style: 'height: 24px; width: 24px;' %>
                <%duration_in_minutes = Video.calculate_duration(@video.final_video_duration) %>
                <%=Video.calculate_price(duration_in_minutes)%>
              </div>
            </div>
            <div class="flex justify-start items-center mt-8">
              <div class="mr-2 font-bold"><%= t('videos.content_dedicace.theme') %></div>
              <div class="flex justify-start items-center p-text-16">
                <%=@video&.dedicace&.name%>
              </div>
            </div>
            <video controls style="max-width: 100%; height: auto; border-radius: 20px; margin-top: 20px;">
              <source src="<%= url_for(@video.final_video_with_watermark) %>" type="video/mp4">
              <%= t('videos.content_dedicace.browser_not_supported') %>
            </video>
          </div>
          <%= link_to t('videos.content_dedicace.refresh_video'), content_dedicace_path(refresh: true), class: "transparent-link", data: { disable_with: "Refreshing..." } %>
        <% elsif @video.processing? %>
          <p><%= t('videos.content_dedicace.processing_message') %></p>
        <% else %>
          <p><%= t('videos.content_dedicace.no_final_video') %></p>
        <% end %>
      </div>

      <div class="video-steps w-full">
        <%= link_to t('modify'), step_back_path, class: "transparent-link", data: {turbo: false} %>
        <%= link_to t('pay'), skip_content_dedicace_path, data: { turbo: false }, class: "black-link" %>
      </div>
    </div>
    <%= image_tag 'right-no-star.png', class: 'image-sides right-image' %>
  </div>
</div>


<script>
  document.addEventListener("DOMContentLoaded", function() {
    const video = document.getElementById('video-player');
    const playPauseButton = document.getElementById('play-pause');
    if(playPauseButton){
      playPauseButton.addEventListener('click', () => {
        if (video.paused) {
          video.play();
          playPauseButton.textContent = 'Pause';
          playPauseButton.classList.remove('with-play-icon');
          playPauseButton.classList.add('with-stop-icon');
        } else {
          video.pause();
          playPauseButton.textContent = 'Play';
          playPauseButton.classList.remove('with-stop-icon');
          playPauseButton.classList.add('with-play-icon');
        }
      });
    }

    const videoId = "<%= @video.id %>";

    // Check the initial status of the video
    fetch(`/videos/${videoId}/concat_status`)
      .then(response => response.json())
      .then(data => {
        console.log(data);

        // Only start polling if the video is processing
        if (data.concat_status !== "completed") {
          const intervalId = setInterval(() => {
            checkStatus(intervalId); // Pass the interval ID to clear it later
          }, 10000); // Poll every 10 seconds
        }
      });

    function checkStatus(intervalId) {
      fetch(`/videos/${videoId}/concat_status`)
        .then(response => response.json())
        .then(data => {
          console.log(data);
          if (data.concat_status === "completed") {
            clearInterval(intervalId); // Stop polling
            window.location.reload(); // Reloads the page to show the final video
          }
        })
        .catch(error => {
          console.error("Error checking status:", error);
        });
    }
  });
</script>