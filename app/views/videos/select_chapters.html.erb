<div>
  <h1 class="video-h1">Sélectionnez les chapitres pour le film</h1>
  <div class="flex flex-row justify-center w-full">
    <%= image_tag 'left-with-star.png', class: 'image-sides left-image' %>
    <div class="content w-full flex flex-col justify-center items-center">
      <div class="text-with-image-block-occasion flex justify-center items-center mb-[72px] w-full p-text-16">
        Lorem ipsum dolor sit amet consectetur. Dictum eu morbi ac elit enim at neque urna. Eleifend condimentum ipsum a lectus tortor est arcu. Feugiat lectus auctor cursus netus eu sit in pharetra. Convallis eget odio molestie urna phasellus etiam ac euismod justo. Ipsum tristique purus risus at ultrices non. Eget lectus diam eget feugiat nulla imperdiet ornare libero.
        <%= image_tag 'icons/retro-camera.png', class: 'image-from-image-text-block' %>
      </div>

      <div class="">
        <%= form_with url: select_chapters_post_path, method: :post, html: {data: { turbo: false }} do |f| %>
          <div class="frame-small-border h-1482">
            <h3 class="video-h3">Choisissez les chapitres qui figureront dans le film ( 12 chapitres max )</h3>
            <p class="p-text-center-16">L'introduction de votre vidéo dépendra de l'option que vous avez sélectionné</p>
            <div class="video-chapters">
              <% @chapterstype.each do |res| %>

                <% checkbox_test_id = "chapter_checkbox_#{res[:ct].id}" %>
                <% input_test_id = "chapter_input_#{res[:ct].id}" %>
                <% slide_color_test_id = "chapter_slide_color_#{res[:ct].id}" %>
                <div class="video-chapter">
                  <div class="video-chapter-wrapper">
                    <%= f.check_box "chapters[#{res[:ct].id}][select]", {checked: res[:select], 'data-testid': checkbox_test_id }, true, false %>
                    <div class="video-chapter-thumb-wrapper">
                      <div class='relative'>
                        <div data-controller="dialog" data-action="click->dialog#clickOutside">
                          <%= image_tag "icons/akar-icons_edit_white.svg", alt: "Edit Icon", class: "edit-video-icon", data: { action: "click->dialog#open" } %>
                          <%= render "videos/shared/select_chapters_modal", :f => f, :res => res %>
                        </div>
                        <% if res[:ct].image.attached? %>
                          <%= image_tag res[:ct].image, class: "video-chapter-thumb" %>
                        <% else %>
                          <p>Pas d'image</p>
                        <% end %>
                        <span><%= res[:ct].name %></span>

                      </div>
                      <div class="video-chapter-input-wrapper mt-4">
                        <%= f.text_field "chapters[#{res[:ct].id}][text]", value: res[:text], placeholder: "Quel texte doit contenir ce chapitre ...", class: 'video-chapter-input', data: {testid: input_test_id} %>
                      </div>
                    </div>
                  </div>
                </div>
              <% end %>
            </div>
          </div>
          <div class="video-steps">
            <%= render "videos/shared/back_button" %>
            <%= f.submit "Étape suivante", class:"black-link" %>
          </div>
        <% end %>
      </div>
    </div>
    <%= image_tag 'right-no-star.png', class: 'image-sides right-image' %>
  </div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".text-options").forEach((textOptionsBlock) => {
      const prevYourTextBlock = textOptionsBlock.nextElementSibling; // Find the `prev-your-text` block next to `text-options`

      const fontFamilySelect = textOptionsBlock.querySelector("select[name*='[text_family]']");
      const fontStyleSelect = textOptionsBlock.querySelector("select[name*='[text_style]']");
      const fontSizeSelect = textOptionsBlock.querySelector("select[name*='[text_size]']");

      const updatePreviewText = () => {
        const fontFamily = fontFamilySelect.value;
        const fontStyle = fontStyleSelect.value;
        const fontSize = fontSizeSelect.value;

        // Set styles dynamically
        prevYourTextBlock.style.fontFamily = fontFamily;
        prevYourTextBlock.style.fontSize = `${fontSize}px`;

        // Map text styles to CSS values
        if (fontStyle === "Bold") {
          prevYourTextBlock.style.fontWeight = "bold";
          prevYourTextBlock.style.fontStyle = "normal";
        } else if (fontStyle === "Italic") {
          prevYourTextBlock.style.fontWeight = "normal";
          prevYourTextBlock.style.fontStyle = "italic";
        } else if (fontStyle === "Bold Italic") {
          prevYourTextBlock.style.fontWeight = "bold";
          prevYourTextBlock.style.fontStyle = "italic";
        } else {
          prevYourTextBlock.style.fontWeight = "normal";
          prevYourTextBlock.style.fontStyle = "normal";
        }
      };

      // Add event listeners to update preview on change
      fontFamilySelect.addEventListener("change", updatePreviewText);
      fontStyleSelect.addEventListener("change", updatePreviewText);
      fontSizeSelect.addEventListener("change", updatePreviewText);

      // Initialize preview with default values
      updatePreviewText();
    });
  });
</script>
<style>
.video-chapters {
  max-height: 1461px;
  overflow-y: auto;
  padding-right: 40px;
  padding-left: 5px;
  padding-top: 5px;
  scrollbar-width: thin;
}

.video-chapter-input-wrapper {
  position: relative;
  width: 100%;
  border-radius: 8px;
  background: linear-gradient(181.68deg, #C9E1FF 19.49%, #0D6783 60.63%, #163F50 90.92%);
  padding: 1.1px; /* Space for the gradient border */
}

.video-chapter-input {
  width: 100%;
  padding: 15px 27px;
  border: none;
  border-radius: 6px; /* Inner radius slightly smaller than wrapper */
  background: #fff;
  color: rgba(32, 31, 31, 0.5);
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: 25px; /* 156.25% */
}

.video-chapter-input::placeholder {
  color: rgba(32, 31, 31, 0.5);
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: 25px;
}

.video-chapters::-webkit-scrollbar {
  width: 3px;
  margin-right: -36px;
}

.video-chapters::-webkit-scrollbar-thumb {
  background-color: rgba(32, 31, 31, 1);
  border-radius: 3px;
}

.video-chapters::-webkit-scrollbar-thumb:hover {
  background-color: rgba(32, 31, 31, 0.3);
}

.video-chapters {
  scrollbar-color: rgba(32, 31, 31, 1) rgba(32, 31, 31, 0.3);
}
</style>