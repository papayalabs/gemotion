<div>
  <h1 class="video-h1"><%= t('videos.dedicace.title') %></h1>
  <div class="w-full flex flex-col justify-center items-center">
    <div class="text-with-image-block-occasion flex justify-center items-center mb-[72px] w-full p-text-16">
      Lorem ipsum dolor sit amet consectetur. Dictum eu morbi ac elit enim at neque urna. Eleifend condimentum ipsum a lectus tortor est arcu. Feugiat lectus auctor cursus netus eu sit in pharetra. Convallis eget odio molestie urna phasellus etiam ac euismod justo. Ipsum tristique purus risus at ultrices non. Eget lectus diam eget feugiat nulla imperdiet ornare libero.
      <%= image_tag 'icons/three-stars.png', class: 'image-from-image-text-block' %>
    </div>
  </div>
  <div class="">

    <%= form_with url: dedicace_post_path, method: :post do |f| %>
        <div class="frame-no-border">
            <div class="dedications">
              <% @dedicaces.each do |dedicace| %>
                <div class="dedication">
                  <%= f.radio_button "dedicace", dedicace.id, { checked: dedicace == @video.dedicace } %>
                  <div class="dedication-wrapper">
                    <div class="dedication-thumb-wrapper">
                      <% if dedicace.video.attached? %>
                        <div class="video-wrapper">
                          <%= video_tag dedicace.video, controls: false, class: "video-content h-[150px] w-[150px] br-10" %>
                          <div class="play-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none">
                              <defs>
                                <linearGradient id="play-icon-gradient" x1="0%" y1="100%" x2="0%" y2="0%">
                                  <stop offset="0%" stop-color="#163F50" />
                                  <stop offset="50%" stop-color="#0D6783" />
                                  <stop offset="100%" stop-color="#C9E1FF" />
                                </linearGradient>
                              </defs>
                              <path d="M8 5v14l11-7z" fill="url(#play-icon-gradient)" />
                            </svg>
                          </div>
                        </div>
                      <% else %>
                        <p><%= t('videos.dedicace.no_video') %></p>
                      <% end %>
                      <span class="dedication-name"><%= dedicace.name %></span>
                    </div>
                    <p class="p-text-16 mt-4"><%= dedicace.description %></p>
                    <p class="p-text-16-bold mt-2 text-decoration-underline"><%= t('videos.dedicace.read_more') %></p>
                  </div>
                </div>
              <% end %>
            </div>
        </div>

        <div class="w-full flex justify-center items-center mt-65">
          <div class="w-[1006px] flex-shrink-0 rounded-[20px] border border-[rgba(201,225,255,0.20)] bg-white shadow-[4px_4px_20px_5px_rgba(13,103,131,0.10)] py-[49.5px] px-[116px] mb-[56px]">
            <h3 class="text-black text-center font-montserrat text-[32px] font-bold leading-[37px] mb-[24px]">
              <%= t('videos.dedicace.special_request') %>
            </h3>
            <p class="w-100 mb-[32px] p-text-center-16">
              <%= t('videos.dedicace.processing_time') %>
            </p>
            <%= f.text_area :special_request_dedicace,
                            id: "special_request_dedicace",
                            placeholder: t('videos.dedicace.describe_theme'),
                            rows: 3,
                            value: @video.special_request_dedicace,
                            class: "flex w-100i px-[27px] py-[15px] items-start gap-[10px] rounded-[8px] border border-[rgba(32,31,31,0.50)] bg-white text-black font-red-hat-display text-[16px] font-normal leading-[25px]" %>
            <div class="flex justify-center items-center gap-[16px] w-100 mt-4">
              <%= image_tag "icons/attention.svg" %>
              <p class="w-100 p-text-center-16">
                <%= t('videos.dedicace.additional_fees') %>
              </p>
            </div>
          </div>
        </div>

        <div class="video-steps">
          <%= render "videos/shared/back_button" %>
          <%= f.submit t('next_step'), class:"black-link" %>
        </div>

    <% end %>

  </div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".video-wrapper").forEach((wrapper) => {
      const video = wrapper.querySelector(".video-content");
      const playIcon = wrapper.querySelector(".play-icon");

      const togglePlayPause = () => {
        if (video.paused) {
          video.play();

          // Change to Pause Icon
          playIcon.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none">
              <rect x="6" y="5" width="4" height="14" fill="url(#play-icon-gradient)" />
              <rect x="14" y="5" width="4" height="14" fill="url(#play-icon-gradient)" />
              <defs>
                <linearGradient id="play-icon-gradient" x1="0%" y1="100%" x2="0%" y2="0%">
                  <stop offset="0%" stop-color="#163F50" />
                  <stop offset="50%" stop-color="#0D6783" />
                  <stop offset="100%" stop-color="#C9E1FF" />
                </linearGradient>
              </defs>
            </svg>
          `;

          playIcon.style.opacity = 0.8; // Slight transparency during playback
        } else {
          video.pause();

          // Change to Play Icon
          playIcon.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none">
              <defs>
                <linearGradient id="play-icon-gradient" x1="0%" y1="100%" x2="0%" y2="0%">
                  <stop offset="0%" stop-color="#163F50" />
                  <stop offset="50%" stop-color="#0D6783" />
                  <stop offset="100%" stop-color="#C9E1FF" />
                </linearGradient>
              </defs>
              <path d="M8 5v14l11-7z" fill="url(#play-icon-gradient)" />
            </svg>
          `;

          playIcon.style.opacity = 1; // Fully visible when paused
        }
      };

      // Play/Pause functionality on play icon click
      playIcon.addEventListener("click", togglePlayPause);

      // Show play icon when video ends
      video.addEventListener("ended", () => {
        playIcon.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none">
            <defs>
              <linearGradient id="play-icon-gradient" x1="0%" y1="100%" x2="0%" y2="0%">
                <stop offset="0%" stop-color="#163F50" />
                <stop offset="50%" stop-color="#0D6783" />
                <stop offset="100%" stop-color="#C9E1FF" />
              </linearGradient>
            </defs>
            <path d="M8 5v14l11-7z" fill="url(#play-icon-gradient)" />
          </svg>
        `;
        playIcon.style.opacity = 1;
      });

      // Ensure play icon updates on video pause
      video.addEventListener("pause", () => {
        playIcon.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none">
            <defs>
              <linearGradient id="play-icon-gradient" x1="0%" y1="100%" x2="0%" y2="0%">
                <stop offset="0%" stop-color="#163F50" />
                <stop offset="50%" stop-color="#0D6783" />
                <stop offset="100%" stop-color="#C9E1FF" />
              </linearGradient>
            </defs>
            <path d="M8 5v14l11-7z" fill="url(#play-icon-gradient)" />
          </svg>
        `;
        playIcon.style.opacity = 1;
      });
    });
  });
</script>
<style>
.video-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
}

.video-content {
  width: 100%;
  height: 100%;
}

.play-icon {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 40px;
    height: 40px;
    background: rgba(242, 252, 255, 1); /* White background */
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: opacity 0.3s ease, transform 0.2s ease;
}

.play-icon:hover {
    opacity: 0.8; /* Slight fade effect */
    transform: translate(-50%, -50%) scale(1.1); /* Scale up on hover */
    cursor: pointer;
}

.play-icon svg {
    width: 20px; /* Size of the play icon */
    height: 20px;
}
.video-wrapper:hover .play-icon {
  opacity: 0.8;
}
</style>